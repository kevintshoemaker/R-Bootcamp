master <- read.csv("http://dgrtwo.github.io/pages/lahman/Master.csv")
batting <- read.csv("http://dgrtwo.github.io/pages/lahman/Batting.csv")
batting <- as.data.table(batting)
salaries <- read.csv("http://dgrtwo.github.io/pages/lahman/Salaries.csv")
salaries <- as.data.table(salaries)
master <- read.csv("http://dgrtwo.github.io/pages/lahman/Master.csv")
master <- as.data.table(master)
batting <- read.csv("http://dgrtwo.github.io/pages/lahman/Batting.csv")
batting <- as.data.table(batting)
summary(salaries)
salaries
sumary(master)
summary(master)
master
summary(batting)
batting
library(ggplot2)
library(tidyverse)
salaries[,mean(salary),by=yearID]
salaries.byyear <- salaries[,mean(salary),by=yearID]
salaries.year <- salaries[,mean(salary),by=yearID]
rm(list=ls())
library(data.table)
library(ggplot2)
library(tidyverse)
salaries <- read.csv("http://dgrtwo.github.io/pages/lahman/Salaries.csv")
salaries <- as.data.table(salaries)
master <- read.csv("http://dgrtwo.github.io/pages/lahman/Master.csv")
master <- as.data.table(master)
batting <- read.csv("http://dgrtwo.github.io/pages/lahman/Batting.csv")
batting <- as.data.table(batting)
summary(salaries)
salaries
summary(master)
master
summary(batting)
batting
salaries.year <- salaries[,mean(salary),by=yearID]
ggplot(salaries.year, aes(yearID,salary)) + geom_point()
salaries.year <- salaries[,list(salary=mean(salary),by=yearID]
salaries.year <- salaries[,list(salary=mean(salary)),by=yearID]
ggplot(salaries.year, aes(yearID,salary)) + geom_point()
ggplot(salaries.year, aes(yearID,salary)) + geom_line()
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=c(yearID,lgID)]
salaries
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=c(yearID,lgID)]
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=.(yearID,lgID)]
salaries.year.lg
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=c("yearID","lgID")]
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=c("yearID","lgID")]
salaries[order(yearID),list(yearID)]
salaries.year.lg <- salaries[,list(salary=mean(salary)),by=list(yearID,lgID)]
salaries.year.lg
?merge
cleaned_data <- read_delim(url, delim = "\t") %>%
separate(NAME, c("name", "BP", "MF", "systematic_name", "number"), sep = "\\|\\|") %>%
mutate_at(vars(name:systematic_name), funs(trimws)) %>%
select(-number, -GID, -YORF, -GWEIGHT) %>%
gather(sample, expression, G0.05:U0.3) %>%
separate(sample, c("nutrient", "rate"), sep = 1, convert = TRUE) %>%
filter(!is.na(expression), systematic_name != "")
url <- "http://varianceexplained.org/files/Brauer2008_DataSet1.tds"
cleaned_data <- read_delim(url, delim = "\t") %>%
separate(NAME, c("name", "BP", "MF", "systematic_name", "number"), sep = "\\|\\|") %>%
mutate_at(vars(name:systematic_name), funs(trimws)) %>%
select(-number, -GID, -YORF, -GWEIGHT) %>%
gather(sample, expression, G0.05:U0.3) %>%
separate(sample, c("nutrient", "rate"), sep = 1, convert = TRUE) %>%
filter(!is.na(expression), systematic_name != "")
cleaned_data %>%
filter(BP == "leucine biosynthesis") %>%
ggplot(aes(rate, expression, color = nutrient)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~name + systematic_name)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(data.table)
library(ggplot2)
library(tidyverse)
salaries <- read_csv("http://dgrtwo.github.io/pages/lahman/Salaries.csv")
salaries
master <- read_csv("http://dgrtwo.github.io/pages/lahman/Master.csv")
batting <- read_csv("http://dgrtwo.github.io/pages/lahman/Batting.csv")
salaries
salaries
print(salaries)
print(salaries)
salaries
master
batting
#########
# explore the data object
salaries
summary(salaries)    # summary statistics for all variables in data frame
#########
# explore the data object
salaries
master
summary(master)
summary(batting)
# merge the batting and salaries data frames
merged.batting = left_join(batting, salaries, by=c("playerID", "yearID", "teamID", "lgID"))
merged.all = inner_join(merged.batting, master, by="playerID")
merged.all
View(merged.all)
merged.all = merged.all %>%
filter( AB > 0 )
range(merged.all$AB)
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(Total.HR=sum(HR))
View(summarized.batters)
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(Total.HR=sum(HR)) %>%
arrange(Total.HR)
merged.all = merged.all %>%
mutate(name=paste(nameFirst, nameLast))
View(merged.all)
summarized.batters = merged.all %>%
group_by(playerID,name) %>%
summarise(Total.HR=sum(HR)) %>%
arrange(Total.HR)
?group_by
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(Total.HR=sum(HR),name=name) %>%
arrange(Total.HR)
?summarize
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(Total.HR=sum(HR),name=first(name)) %>%
arrange(Total.HR)
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(name=first(name),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H)) %>%
arrange(Total.HR)
?arrange
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(name=first(name),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H)) %>%
arrange(desc(Total.HR))
ggplot(summarized.batters, aes(Total.H, Total.R)) + geom_point()
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(name=first(name),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
BattingAverage=sum(H) / sum(AB))) %>%
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(name=first(name),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
# visualize histogram of batting average
ggplot(summarized.batters, aes(BattingAverage)) + geom_histogram()
# remove "outliers" and try again
summarized.batters = summarized.batters %>%
filter(AB>100)
summarized.batters = merged.all %>%
group_by(playerID) %>%
summarise(name=first(name),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
summarized.batters
# visualize correlation between hits and runs
ggplot(summarized.batters, aes(Total.H, Total.R)) + geom_point()
# visualize histogram of batting average
ggplot(summarized.batters, aes(BattingAverage)) + geom_histogram()
# remove "outliers" and try again
summarized.batters = summarized.batters %>%
filter(AB>100)
ggplot(summarized.batters, aes(BattingAverage)) + geom_histogram()
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage), sd = sd(BattingAverage)))
) +
scale_x_continuous("Batting Average") +
opts(title = "Histogram with Normal Curve")
?opts
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage), sd = sd(BattingAverage)))
) +
scale_x_continuous("Batting Average") +
theme(title = "Histogram with Normal Curve")
?theme
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage), sd = sd(BattingAverage)))
) +
scale_x_continuous("Batting Average") +
theme(plot.title = "Histogram with Normal Curve")
with(summarized.batters, c(mean = mean(BattingAverage), sd = sd(BattingAverage))
)
with(summarized.batters, c(mean = mean(BattingAverage),
sd = sd(BattingAverage))))
with(summarized.batters, c(mean = mean(BattingAverage),
sd = sd(BattingAverage)))
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage),
sd = sd(BattingAverage)))
)  # +
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage),
sd = sd(BattingAverage)))
)   +
scale_x_continuous("Batting Average") #+
ggplot(summarized.batters, aes(BattingAverage)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(summarized.batters, c(mean = mean(BattingAverage),
sd = sd(BattingAverage)))
)   +
scale_x_continuous("Batting Average") +
labs(title = "Histogram with Normal Curve")
merged.all2 <- merged.all %>%
filter(AB > 75)
# Summmarize by time ------------------------
summarized.batters = merged.all %>%
group_by(yearID,teamID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(BattingAverage))
# Summmarize by time ------------------------
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(BattingAverage))
View(summarized.teams.year)
summarized.teams.year
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(Total.H, Total.R)) +
geom_point(aes(col=teamID))
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(Total.H, Total.R, col=teamID)) +
geom_line()
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line()
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE)
summarized.year = merged.all %>%
group_by(yearID) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(BattingAverage))
View(summarized.year)
View(summarized.year)
# visualize correlation between hits and runs
ggplot(summarized.year, aes(yearID, Total.HR, col=League)) +
geom_line()
summarized.year = merged.all %>%
group_by(yearID) %>%
filter(yearID>1920) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(BattingAverage))
summarized.year
# visualize trend in home runs
ggplot(summarized.year, aes(yearID, Total.HR, col=League)) +
geom_line()
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(yearID)
?summarise
?group_vars
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(yearID,League)
summarized.year = merged.all %>%
group_by(yearID) %>%
filter(yearID>1920) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(yearID, League)
summarized.year = merged.all %>%
filter(yearID>1920) %>%
group_by(yearID,League) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(yearID, League)
summarized.year = merged.all %>%
filter(yearID>1920) %>%
group_by(yearID,lgID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(yearID, lgID)
# visualize trend in home runs
ggplot(summarized.year, aes(yearID, Total.HR, col=League)) +
geom_line()
# visualize trend in home runs
ggplot(summarized.year, aes(yearID, Total.HR, col=lgID)) +
geom_line()
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
# visualize trend in batting average
ggplot(summarized.year, aes(yearID, BattingAverage, col=lgID)) +
geom_line()
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
View(summarized.teams.year)
?facet_wrap
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap(lgID)
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap(League)
summarized.teams.year = merged.all %>%
group_by(yearID,teamID) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap(League)
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League')
summarized.teams.year = merged.all %>%
filter(yearID>1920) %>%
group_by(yearID,teamID) %>%
summarise(League = first(lgID),
Total.HR=sum(HR),
Total.R=sum(R),
Total.H=sum(H),
AB=sum(AB),
BattingAverage=sum(H) / sum(AB) ) %>%
arrange(desc(Total.HR))
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League')
# visualize histogram of batting average
ggplot(summarized.batters, aes(BattingAverage)) + geom_histogram()
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League')
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League') +
stat_smooth()
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League') +
geom_smooth(method="lm")
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League') +
geom_smooth(method="lm",formula= y~x)
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League') +
geom_smooth(aes(yearID, Total.HR),method="lm",formula= y~x)
# visualize correlation between hits and runs
ggplot(summarized.teams.year, aes(yearID, Total.HR, col=teamID)) +
geom_line(show.legend = FALSE) +
facet_wrap('League')
lm(Total.HR~yearID,summarized.teams.year)
model1 <- lm(Total.HR~yearID,summarized.teams.year)
summary(model1)
ggplot(summarized.teams.year,aes(yearID,Total.HR))+
geom_line() +
geom_smooth(method="lm")
ggplot(summarized.teams.year,aes(yearID,Total.HR))+
geom_points() +
geom_smooth(method="lm")
ggplot(summarized.teams.year,aes(yearID,Total.HR))+
geom_point() +
geom_smooth(method="lm")
?geom_smooth
ggplot(summarized.teams.year,aes(yearID,BattingAverage))+
geom_point() +
geom_smooth(method="lm")
ggplot(summarized.teams.year,aes(yearID,Total.HR))+
geom_point() +
geom_smooth(method="lm")
model1 <- lm(Total.HR~yearID,summarized.teams.year)
summary(model1)
layout(matrix(1:4,nrow=2,byrow=T))  # set up graphics window
plot(model1)  # run diagnostic plots for our regression
######
# test key assumptions visually
layout(matrix(1:4,nrow=2,byrow=T))  # set up graphics window
plot(model1)  # run diagnostic plots for our regression
ggplot(summarized.teams.year,aes(yearID,Total.HR))+
geom_point() +
geom_smooth(method="lm")
model1 <- lm(Total.HR~yearID,summarized.teams.year)
summary(model1)
mylist <- list()        # create empty list
mylist[[1]] <- c(1,2,3)     # note the double brackets- this is one way to reference list elements.
mylist[[2]] <- c("foo","bar")
mylist[[3]] <- matrix(1:6,nrow=2)
mylist
#############
### DATA FRAMES
#############
mydf <- tibble(col1=c(1,2,3),colW2=c(4,5,6))        # create a ‘tibble' data frame with two columns. Each column is a vector of length 3
mydf
#############
### DATA FRAMES
#############
mydf <- tibble(col1=c(1,2,3),col2=c("A","A","B"))        # create a ‘tibble' data frame with two columns. Each column is a vector of length 3
mydf
# Make up an entire fake data frame!
my.data <- tibble(
Obs.Id = 1:100,
Treatment = rep(c("A","B","C","D","E"),each=20),
Block = rep(1:20,times=5),
Germination = rpois(100,lambda=rep(c(1,5,4,7,1),each=20)),   # random poisson variable
AvgHeight = rnorm(100,mean=rep(c(10,30,31,25,35,7),each=20))
)
my.data
summary(my.data)    # Use the "summary()" function to summarize each column in the data frame.
data("diamonds")
data("votes")
data(votes)
data(dplyr::votes)
votes
library(dplyr)
data(votes)
